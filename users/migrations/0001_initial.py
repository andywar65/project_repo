# Generated by Django 3.0.2 on 2020-01-26 22:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=50, verbose_name='Cognome')),
                ('email', models.EmailField(max_length=254, verbose_name='Indirizzo email')),
                ('sector', models.CharField(choices=[('0-NO', 'No'), ('3-FI', 'No, solo i figli'), ('1-YC', 'Sì, con il corso'), ('2-NC', 'Sì, senza corso')], default='0-NO', max_length=4, verbose_name='Vuoi correre con noi?')),
                ('children_str', models.TextField(blank=True, help_text='Nome e cognome dei figli che si intende iscrivere, separati da una virgola.', max_length=200, null=True, verbose_name='Figli')),
            ],
            options={
                'verbose_name': 'Richiedente',
                'verbose_name_plural': 'Richiedenti',
            },
        ),
        migrations.CreateModel(
            name='CourseSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full', models.CharField(max_length=32, verbose_name='Giorno e ora')),
                ('abbrev', models.CharField(max_length=8, verbose_name='Abbreviazione')),
            ],
            options={
                'verbose_name': 'Orario',
                'verbose_name_plural': 'Orari',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('user', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('sector', models.CharField(choices=[('0-NO', 'No'), ('3-FI', 'No, solo i figli'), ('1-YC', 'Sì, con il corso'), ('2-NC', 'Sì, senza corso')], default='0-NO', max_length=4, verbose_name='Corre con noi?')),
                ('first_name', models.CharField(default='Nome', max_length=50, verbose_name='Nome')),
                ('last_name', models.CharField(default='Cognome', max_length=50, verbose_name='Cognome')),
                ('email', models.EmailField(default='me@example.com', max_length=254, verbose_name='Email')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=users.models.user_directory_path)),
                ('thumb', models.CharField(blank=True, editable=False, max_length=200, null=True)),
                ('gender', models.CharField(blank=True, choices=[('F', 'Femmina'), ('M', 'Maschio')], max_length=1, null=True, verbose_name='Sesso')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Data di nascita')),
                ('place_of_birth', models.CharField(blank=True, max_length=50, null=True, verbose_name='Luogo di nascita')),
                ('nationality', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nazionalità')),
                ('fiscal_code', models.CharField(blank=True, max_length=16, null=True, verbose_name='Codice fiscale')),
                ('address', models.CharField(blank=True, help_text='Via/Piazza, civico, CAP, Città', max_length=100, null=True, verbose_name='Indirizzo')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Telefono/i')),
                ('email_2', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Seconda email')),
                ('no_spam', models.BooleanField(default=True, help_text='Vuoi ricevere notifiche sugli eventi?', verbose_name='Mailing list')),
                ('course_alt', models.CharField(blank=True, max_length=100, null=True, verbose_name='Altro orario')),
                ('course_membership', models.CharField(blank=True, choices=[('INTU', 'Integrazione per materiale socio UISP'), ('INTF', 'Integrazione per materiale socio FIDAL')], help_text='Solo se si segue un corso', max_length=4, null=True, verbose_name='Federazione / Ente sportivo')),
                ('no_course_membership', models.CharField(blank=True, choices=[('UNA', 'UISP non agonistico'), ('UA', 'UISP agonistico'), ('FID', 'FIDAL agonistico')], help_text='Solo se non si segue un corso', max_length=4, null=True, verbose_name='Federazione / Ente sportivo')),
                ('sign_up', models.FileField(blank=True, null=True, upload_to=users.models.user_directory_path, verbose_name='Richiesta di tesseramento')),
                ('privacy', models.FileField(blank=True, null=True, upload_to=users.models.user_directory_path, verbose_name='Privacy')),
                ('med_cert', models.FileField(blank=True, null=True, upload_to=users.models.user_directory_path, verbose_name='Certificato medico')),
                ('membership', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tessera')),
                ('mc_expiry', models.DateField(blank=True, null=True, verbose_name='Scadenza CM/CMA')),
                ('mc_state', models.CharField(blank=True, choices=[('0-NF', 'Manca il file'), ('1-VF', 'Verifica file'), ('2-RE', 'Regolare'), ('6-IS', 'In scadenza'), ('3-SV', 'Scaduto, da verificare'), ('4-SI', 'Scaduto, inviare notifica'), ('5-NI', 'Scaduto, notifica inviata')], max_length=4, null=True, verbose_name='Stato del CM/CMA')),
                ('total_amount', models.FloatField(default=0.0, verbose_name='Importo totale')),
                ('settled', models.CharField(blank=True, choices=[('VI', 'Verifica importo totale'), ('YES', 'A posto'), ('NO', 'No!')], max_length=4, null=True, verbose_name='In regola?')),
                ('course', models.ManyToManyField(blank=True, to='users.CourseSchedule', verbose_name='Orari scelti')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='member_parent', to=settings.AUTH_USER_MODEL, verbose_name='Genitore')),
            ],
            options={
                'verbose_name': 'Iscritto',
                'verbose_name_plural': 'Iscritti',
            },
        ),
        migrations.CreateModel(
            name='UserMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Inviato da')),
                ('recipient', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Destinatario')),
                ('subject', models.CharField(max_length=200, verbose_name='Soggetto')),
                ('body', models.TextField(verbose_name='Messaggio')),
                ('notice', models.CharField(choices=[('SPAM', 'Da inviare'), ('DONE', 'Già inviata')], default='SPAM', max_length=4, verbose_name='Notifica via email')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_message', to=settings.AUTH_USER_MODEL, verbose_name='Utente')),
            ],
            options={
                'verbose_name': 'Messaggio',
                'verbose_name_plural': 'Messaggi',
            },
        ),
        migrations.CreateModel(
            name='ApplicantChild',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=50, verbose_name='Cognome')),
                ('parent', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='applicant_children', to='users.Applicant')),
            ],
            options={
                'verbose_name': 'Figlio',
                'verbose_name_plural': 'Figli',
            },
        ),
        migrations.CreateModel(
            name='MemberPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Data')),
                ('amount', models.FloatField(default=0.0, verbose_name='Importo')),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='member_payments', to='users.Member')),
            ],
            options={
                'verbose_name': 'Pagamento',
                'verbose_name_plural': 'Pagamenti',
            },
        ),
    ]
